set cut_paste_input [stack 0]
version 15.0 v2
push $cut_paste_input
ModifyMetaData {
 metadata {
  {set flame/openclip /path/to/openclip/sh010.clip}
 }
 name ModifyMetadata
 label "openclip path"
 note_font Helvetica
 selected true
 xpos -83
 ypos 247
}
Write {
 channels rgba
 file /path/to/sh010/render/v01/sh010_v01.%04d.exr
 file_type exr
 compression DWAA
 metadata "all metadata"
 first_part rgba
 create_directories true
 version 19
 ocioColorspace scene_linear
 display ACES
 view Rec.709
 afterRender "import nuke\nimport re\nimport subprocess\n\nnode = nuke.thisNode()\n\n# Get the openclip file from the metadata\nopenclip = node.metadata()\['flame/openclip']\n\n# Get the render path from write node and change the frame string to a single frame\nfilename = node\['file'].value()\nframe_pattern = r'(%\\d\{0,4\}d|#|#\{2,\}|\[0-9]\{4\})(?!\[-_/])'\nfilename = re.sub(frame_pattern, str(int(nuke.root()\['first_frame'].value())), filename)\nprint(filename)\n# Path to Python. Need the PyYAML module installed\npython_path = node\['python_exec'].value()\nupdate_openclip_path = node\['update_openclip_script'].value()\n\n# Process the clip\nprocess = subprocess.Popen(\[python_path, update_openclip_path, '-i', openclip, '-f', filename], stdout=subprocess.PIPE, stderr=subprocess.PIPE)\nstdout, stderr = process.communicate()\nif stderr:\n    print(\"Error:\", stderr.decode('utf-8'))"
 name WriteOpenClip
 note_font Helvetica
 selected true
 xpos -83
 ypos 291
 addUserKnob {20 update_openclip_tab l "Update Openclip"}
 addUserKnob {2 update_openclip_script l "Openclip script"}
 update_openclip_script /mnt/config/flame/update_openclip/update_openclip.py
 addUserKnob {2 python_exec l "Python Exec"}
 python_exec /mnt/config/flame/update_openclip/.venv/bin/python
 addUserKnob {26 ""}
 addUserKnob {26 help_1 l "" +STARTLINE T "PyYAML Module needed for Python Environment"}
}
