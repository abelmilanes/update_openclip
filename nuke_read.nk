set cut_paste_input [stack 0]
version 15.0 v2
Read {
 inputs 0
 file_type exr
 origset true
 auto_alpha true
 name OpenClipRead
 knobChanged "import os\nimport re\nimport xml.etree.ElementTree as ET\nimport xml.dom.minidom\nimport datetime\n\nnode = nuke.thisNode()\nknob = nuke.thisKnob()\nopenclip_file = node\['openclip'].value()\n\ndef parse_openclip(openclip):\n    tree = ET.parse(openclip)\n    root = tree.getroot()\n    versions = root.find('.//versions')\n    current_version = versions.get('currentVersion')    \n    oclip_versions = \[]\n    for version in versions:\n        ver = version.get('uid')\n        oclip_versions.append(ver)\n        \n    render_version_dict = \{\}\n    feeds = root.find('.//feeds')\n    for feed in feeds:\n        feed_ver = feed.get('vuid')\n        render_path = feed.find('.//path').text\n        render_version_dict\[feed_ver] = render_path\n        \n    return current_version, render_version_dict\n            \n\ndef version_read(ver_filename):\n    read_filename = ver_filename\n    \n    if \".exr\" in ver_filename:\n        img_seq_pattern = r'\\\[(\\d+)-(\\d+)\\]'\n        read_filename = re.sub(img_seq_pattern, '%04d', ver_filename)\n        range_match = r'(\\d+)-(\\d+)'\n        range = re.search(range_match, ver_filename)\n        \n        first_frame = int(range.group(1))\n        last_frame = int(range.group(2))\n        \n        node\['first'].setValue(first_frame)\n        node\['last'].setValue(last_frame)\n    \n    print(read_filename)\n    node\['file'].setValue(read_filename)\n\n\nif knob.name() == \"openclip\":\n    current_version, render_version_dict = parse_openclip(openclip_file) \n    versions = render_version_dict.keys()\n    node\['versions'].setValues(sorted(versions))\n    node\['versions'].setValue(current_version)\n    ver_filename = render_version_dict\[current_version]\n    version_read(ver_filename)\n    \nif knob.name() == \"versions\":\n    sel_ver = knob.value()\n    current_version, render_version_dict = parse_openclip(openclip_file)             \n    ver_filename = render_version_dict\[sel_ver]\n    version_read(ver_filename)\n"
 tile_color 0x989898ff
 note_font Helvetica
 selected true
 xpos 214
 ypos -124
 postage_stamp false
 addUserKnob {20 openclip_tab l Openclip}
 addUserKnob {2 openclip l OpenClip}
 addUserKnob {4 versions l Versions M {v00}}
 addUserKnob {22 scan l Scan -STARTLINE T "import os\nimport re\nimport xml.etree.ElementTree as ET\nimport xml.dom.minidom\nimport datetime\n\nnode = nuke.thisNode()\nopenclip = node\['openclip'].value()\n\ndef update_versions(openclip):\n    if openclip:\n        tree = ET.parse(openclip)\n        root = tree.getroot()\n        \n        versions = root.find('.//versions')\n        current_version = versions.get('currentVersion')\n        \n        # Checks versions\n        oclip_versions = \[]\n        for version in versions:\n            ver = version.get('uid')\n            oclip_versions.append(ver)\n        \n        node\['versions'].setValues(sorted(oclip_versions))\n        node\['versions'].setValue(current_version)\n        \ndef main():\n    update_versions(openclip)\n\nif __name__ == \"__main__\":\n    main()\n    "}
}
